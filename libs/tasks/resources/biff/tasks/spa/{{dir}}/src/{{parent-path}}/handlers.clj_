(ns {{parent-ns}}.handlers
  (:require
    [biff.util-tmp :as bu]
    [biff.crux-tmp :as bcrux]
    [crux.api :as crux]))

; See https://findka.com/biff/#web-sockets
(defmulti api :id)

(defmethod api :default
  [{:keys [id]} _]
  (bu/anom :not-found (str "No method for " id)))

(defmethod api :example/set-bar
  [{:keys [biff.crux/node biff.crux/db biff/uid] :as sys} {:keys [value]}]
  ; uid is taken from the user's session cookie.
  (when-some [user (crux/entity @db uid)]
    (println "Current bar value:" (:user/bar user))

    ; See https://findka.com/biff/#transactions
    ; biff.crux/submit-tx bypasses authorization functions, but it still checks
    ; document specs.
    (bcrux/submit-tx
      sys
      {[:user uid] (assoc user :user/bar value)})

    {:some-return-value
     (str "This map will get sent to the client. "
       "Use nil if you don't want to return anything.")}))
